// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.AppView = (function(_super) {
    __extends(AppView, _super);

    function AppView() {
      return AppView.__super__.constructor.apply(this, arguments);
    }

    AppView.prototype.template = _.template('<div class="top"> <h2 class="score">Your Score: <span></span></h2> <button class="hit-button btn btn-info">Hit</button> <button class="stand-button btn btn-info">Stand</button> <button class="newGame-button btn btn-info" style="display: none;">Start a New Game</button> </div> <div class="row"> <div class="player-hand-container col-md-6"></div> <div class="dealer-hand-container col-md-6"></div> </div>');

    AppView.prototype.events = {
      "click .hit-button": function() {
        return this.model.get('playerHand').hit();
      },
      "click .stand-button": function() {
        return this.model.get('dealerHand').stand();
      },
      "click .newGame-button": function() {
        return this.model.start();
      }
    };

    AppView.prototype.initialize = function() {
      this.model.on('change:playerHand', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
      this.model.on('change:dealerHand', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
      this.model.on('gameEnded', (function(_this) {
        return function() {
          return _this.showNewGameButton();
        };
      })(this));
      this.model.on('dealerWon', (function(_this) {
        return function() {
          return _this.dealerWon();
        };
      })(this));
      this.model.on('showMessage:dealerWon', (function(_this) {
        return function() {
          return _this.showMessageDealerWon();
        };
      })(this));
      this.model.on('showMessage:playerWon', (function(_this) {
        return function() {
          return _this.showMessagePlayerWon();
        };
      })(this));
      return this.render();
    };

    AppView.prototype.render = function() {
      this.$el.children().detach();
      this.$el.html(this.template());
      this.$('.player-hand-container').html(new HandView({
        collection: this.model.get('playerHand')
      }).el);
      this.$('.dealer-hand-container').html(new HandView({
        collection: this.model.get('dealerHand')
      }).el);
      return this.$('.score span').html(this.model.get('playerTotalScore'));
    };

    AppView.prototype.showNewGameButton = function() {
      this.render();
      this.$('.newGame-button').toggle();
      this.$('.hit-button').toggle();
      return this.$('.stand-button').toggle();
    };

    AppView.prototype.showMessageDealerWon = function() {
      $('.modal-title').html("<strong>Dealer won!!!</strong>");
      return $('#myModal').modal('show');
    };

    AppView.prototype.showMessagePlayerWon = function() {
      $('.modal-title').html("<strong>You won!!!</strong>");
      return $('#myModal').modal('show');
    };

    return AppView;

  })(Backbone.View);

}).call(this);
